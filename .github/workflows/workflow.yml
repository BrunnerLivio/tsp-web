name: Workflow

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: brunnerlivio/tsp-web

jobs:
  "nodejs":
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: npm
      - name: Install dependencies
        run: npm ci
        env:
          CI: true
      - name: Setup test environment
        run: |
          sudo apt-get update -y
          sudo apt install -y task-spooler
      - name: npm test
        run: npm test
  "debian-release-notes":
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Debian release notes
        run: npm run generate-debian-changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: perl -p -i -e 'chomp if eof' debian/changelog
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Debian changelog
          path: |
            debian/changelog

  "debian-package":
    runs-on: ubuntu-latest
    needs: ["debian-release-notes"]
    container: ghcr.io/brunnerlivio/tsp-web:build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: Debian changelog
          path: debian
      - name: Debian package
        run: |
          cat debian/changelog
          debuild -uc -us
          mv ../tsp-web*.deb .
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Debian package
          path: |
            tsp-web*.deb
  "docker-build":
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

 
  "semantic-release":
    runs-on: ubuntu-latest
    needs: ["nodejs", "debian-package", "docker-build"]
    permissions:
      contents: write
      packages: write
      pages: write
      id-token: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: npm
      - uses: actions/download-artifact@master
        with:
          name: Debian package
      - name: Install dependencies
        run: npm ci

      - run: docker build --tag ${{ env.IMAGE_NAME }} .
      - name: Semantic Release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
